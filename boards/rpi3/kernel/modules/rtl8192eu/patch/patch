diff -uNr rtl8192eu-original/Makefile rtl8192eu/Makefile
--- rtl8192eu-original/Makefile	2023-05-10 10:30:02.525375043 -0700
+++ rtl8192eu/Makefile	2023-04-30 11:06:31.208321709 -0700
@@ -52,12 +52,12 @@
 CONFIG_AP_MODE = y
 CONFIG_P2P = y
 CONFIG_MP_INCLUDED = y
-CONFIG_POWER_SAVING = y
+CONFIG_POWER_SAVING = n
 CONFIG_IPS_MODE = default
 CONFIG_LPS_MODE = default
 CONFIG_USB_AUTOSUSPEND = n
 CONFIG_HW_PWRP_DETECTION = n
-CONFIG_BT_COEXIST = y
+CONFIG_BT_COEXIST = n
 CONFIG_WAPI_SUPPORT = n
 CONFIG_EFUSE_CONFIG_FILE = y
 CONFIG_EXT_CLK = n
@@ -131,9 +131,9 @@
 ###################### MP HW TX MODE FOR VHT #######################
 CONFIG_MP_VHT_HW_TX_MODE = n
 ###################### Platform Related #######################
-CONFIG_PLATFORM_I386_PC = y
+CONFIG_PLATFORM_I386_PC = n
 CONFIG_PLATFORM_ARM_YOCTO = n
-CONFIG_PLATFORM_ARM_AARCH64 = n
+CONFIG_PLATFORM_ARM_AARCH64 = y
 CONFIG_PLATFORM_ARM_RPI = n
 CONFIG_PLATFORM_ANDROID_X86 = n
 CONFIG_PLATFORM_ANDROID_INTEL_X86 = n
@@ -1346,6 +1346,7 @@
 
 ifeq ($(CONFIG_PLATFORM_ARM_AARCH64), y)
 EXTRA_CFLAGS += -DCONFIG_LITTLE_ENDIAN
+EXTRA_CFLAGS += -DCONFIG_CONCURRENT_MODE -DCONFIG_NET_NATBYP
 EXTRA_CFLAGS += -DCONFIG_IOCTL_CFG80211 -DRTW_USE_CFG80211_STA_EVENT
 ARCH := arm64
 CROSS_COMPILE :=
diff -uNr rtl8192eu-original/os_dep/linux/recv_linux.c rtl8192eu/os_dep/linux/recv_linux.c
--- rtl8192eu-original/os_dep/linux/recv_linux.c	2023-05-10 10:30:02.593375351 -0700
+++ rtl8192eu/os_dep/linux/recv_linux.c	2023-05-08 23:00:00.889081075 -0700
@@ -16,6 +16,10 @@
 
 #include <drv_types.h>
 
+#ifdef CONFIG_NET_NATBYP
+#include <net/natbyp.h>
+#endif
+
 int rtw_os_recvframe_duplicate_skb(_adapter *padapter, union recv_frame *pcloneframe, _pkt *pskb)
 {
 	int res = _SUCCESS;
@@ -345,6 +349,15 @@
 		if (!pskb)
 			break;
 
+#ifdef CONFIG_NET_NATBYP
+		if (1) {
+			int ret = natbyp_ingress(pskb);
+			if (ret == NATBYP_BYPASSED) {
+				rx_ok = _TRUE;
+				goto next;
+			}
+		}
+#endif
 		rx_ok = _FALSE;
 
 #ifdef CONFIG_RTW_GRO
@@ -498,6 +511,13 @@
 		}
 #endif /* CONFIG_RTW_NAPI */
 
+#ifdef CONFIG_NET_NATBYP
+		ret = natbyp_ingress(pkt);
+		if (ret == NATBYP_BYPASSED) {
+			DBG_COUNTER(padapter->rx_logs.os_netif_ok);
+			return ;
+		}
+#endif
 		ret = rtw_netif_rx(padapter->pnetdev, pkt);
 		if (ret == NET_RX_SUCCESS)
 			DBG_COUNTER(padapter->rx_logs.os_netif_ok);
@@ -589,6 +609,15 @@
 	/* skb_pull(skb, 24); */
 	_rtw_memset(skb->cb, 0, sizeof(skb->cb));
 
+#ifdef CONFIG_NET_NATBYP
+	if (1) {
+		int ret = natbyp_ingress(skb);
+		if (ret == NATBYP_BYPASSED) {
+			precv_frame->u.hdr.pkt = NULL; 
+			return ;
+		}
+	}
+#endif
 	rtw_netif_rx(pmgnt_netdev, skb);
 
 	precv_frame->u.hdr.pkt = NULL; /* set pointer to NULL before rtw_free_recvframe() if call rtw_netif_rx() */
diff -uNr rtl8192eu-original/os_dep/linux/xmit_linux.c rtl8192eu/os_dep/linux/xmit_linux.c
--- rtl8192eu-original/os_dep/linux/xmit_linux.c	2023-05-10 10:30:02.597375371 -0700
+++ rtl8192eu/os_dep/linux/xmit_linux.c	2023-05-08 22:25:46.033864791 -0700
@@ -16,6 +16,10 @@
 
 #include <drv_types.h>
 
+#ifdef CONFIG_NET_NATBYP
+#include <net/natbyp.h>
+#endif
+
 #define DBG_DUMP_OS_QUEUE_CTL 0
 
 uint rtw_remainder_len(struct pkt_file *pfile)
@@ -397,6 +401,11 @@
 		goto drop_packet;
 	}
 
+#ifdef CONFIG_NET_NATBYP
+	if (pkt)
+		natbyp_egress(pkt);
+#endif
+
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 35))
 	os_qid = skb_get_queue_mapping(pkt);
 #endif
