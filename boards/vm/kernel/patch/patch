diff -uNr linux-4.19.32-origin/arch/x86/kernel/setup.c linux-4.19.32/arch/x86/kernel/setup.c
--- linux-4.19.32-origin/arch/x86/kernel/setup.c	2019-03-26 22:14:43.000000000 -0700
+++ linux-4.19.32/arch/x86/kernel/setup.c	2019-08-15 14:34:51.291701412 -0700
@@ -289,20 +289,43 @@
 
 #ifdef CONFIG_BLK_DEV_INITRD
 
+#ifdef CONFIG_EMBEDDED_INITRD
+extern void * __initrd_start, * __initrd_end;
+#endif
+
 static u64 __init get_ramdisk_image(void)
 {
+#ifdef CONFIG_EMBEDDED_INITRD
+	u64 ramdisk_image;
+       
+	if (&__initrd_start != &__initrd_end) {
+		ramdisk_image = (u64)&__initrd_start;
+	} else {
+		ramdisk_image = boot_params.hdr.ramdisk_image;
+		ramdisk_image |= (u64)boot_params.ext_ramdisk_image << 32;
+	}
+#else
 	u64 ramdisk_image = boot_params.hdr.ramdisk_image;
 
 	ramdisk_image |= (u64)boot_params.ext_ramdisk_image << 32;
-
+#endif
 	return ramdisk_image;
 }
 static u64 __init get_ramdisk_size(void)
 {
+#ifdef CONFIG_EMBEDDED_INITRD
+	u64 ramdisk_size;
+       
+	if (&__initrd_start != &__initrd_end) {
+		ramdisk_size = (u64)&__initrd_end - (u64)&__initrd_start;
+	} else {
+		ramdisk_size = boot_params.hdr.ramdisk_size;
+		ramdisk_size |= (u64)boot_params.ext_ramdisk_size << 32;
+	}
+#else
 	u64 ramdisk_size = boot_params.hdr.ramdisk_size;
-
 	ramdisk_size |= (u64)boot_params.ext_ramdisk_size << 32;
-
+#endif
 	return ramdisk_size;
 }
 
@@ -348,7 +371,10 @@
 	    !ramdisk_image || !ramdisk_size)
 		return;		/* No initrd provided by bootloader */
 
-	memblock_reserve(ramdisk_image, ramdisk_end - ramdisk_image);
+#ifdef CONFIG_EMBEDDED_INITRD
+	if (&__initrd_start == &__initrd_end)
+#endif
+		memblock_reserve(ramdisk_image, ramdisk_end - ramdisk_image);
 }
 static void __init reserve_initrd(void)
 {
@@ -373,6 +399,13 @@
 	printk(KERN_INFO "RAMDISK: [mem %#010llx-%#010llx]\n", ramdisk_image,
 			ramdisk_end - 1);
 
+#ifdef CONFIG_EMBEDDED_INITRD
+	if (&__initrd_start != &__initrd_end) {
+		initrd_start = ramdisk_image;
+		initrd_end = initrd_start + ramdisk_size;
+		return ;
+	}
+#endif
 	if (pfn_range_is_mapped(PFN_DOWN(ramdisk_image),
 				PFN_DOWN(ramdisk_end))) {
 		/* All are mapped, easy case */
diff -uNr linux-4.19.32-origin/arch/x86/kernel/vmlinux.lds.S linux-4.19.32/arch/x86/kernel/vmlinux.lds.S
--- linux-4.19.32-origin/arch/x86/kernel/vmlinux.lds.S	2019-03-26 22:14:43.000000000 -0700
+++ linux-4.19.32/arch/x86/kernel/vmlinux.lds.S	2019-08-15 14:34:51.291701412 -0700
@@ -367,6 +367,17 @@
 	}
 #endif
 
+#ifdef CONFIG_EMBEDDED_INITRD
+	. = ALIGN(PAGE_SIZE);
+	.initrd	: {
+		__initrd_start = .;
+		*(.initrd)
+		__initrd_end = .;
+		FILL (0);
+                . = ALIGN (PAGE_SIZE);
+	}
+#endif /* CONFIG_EMBEDDED_INITRD */
+
 	/* BSS */
 	. = ALIGN(PAGE_SIZE);
 	.bss : AT(ADDR(.bss) - LOAD_OFFSET) {
diff -uNr linux-4.19.32-origin/arch/x86/Makefile linux-4.19.32/arch/x86/Makefile
--- linux-4.19.32-origin/arch/x86/Makefile	2019-03-26 22:14:43.000000000 -0700
+++ linux-4.19.32/arch/x86/Makefile	2019-08-15 14:34:51.291701412 -0700
@@ -252,6 +252,9 @@
 drivers-$(CONFIG_MATH_EMULATION) += arch/x86/math-emu/
 drivers-$(CONFIG_PCI)            += arch/x86/pci/
 
+# ramdisk embedding.
+drivers-$(CONFIG_EMBEDDED_INITRD) += arch/x86/ramdisk/
+
 # must be linked after kernel/
 drivers-$(CONFIG_OPROFILE) += arch/x86/oprofile/
 
@@ -295,6 +298,8 @@
 	$(Q)$(MAKE) $(build)=arch/x86/entry/vdso $@
 
 archprepare: checkbin
+	$(Q)[ "$(CONFIG_EMBEDDED_INITRD)" != "y" ] || rm -rf arch/x86/ramdisk/*.o
+
 checkbin:
 ifndef CC_HAVE_ASM_GOTO
 	@echo Compiler lacks asm-goto support.
diff -uNr linux-4.19.32-origin/arch/x86/ramdisk/ld.script linux-4.19.32/arch/x86/ramdisk/ld.script
--- linux-4.19.32-origin/arch/x86/ramdisk/ld.script	1969-12-31 16:00:00.000000000 -0800
+++ linux-4.19.32/arch/x86/ramdisk/ld.script	2019-08-15 14:34:51.291701412 -0700
@@ -0,0 +1,9 @@
+OUTPUT_ARCH(i386:x86-64)
+SECTIONS
+{
+  .initrd :
+  {
+       *(.data)
+  }
+}
+
diff -uNr linux-4.19.32-origin/arch/x86/ramdisk/Makefile linux-4.19.32/arch/x86/ramdisk/Makefile
--- linux-4.19.32-origin/arch/x86/ramdisk/Makefile	1969-12-31 16:00:00.000000000 -0800
+++ linux-4.19.32/arch/x86/ramdisk/Makefile	2019-08-15 14:43:29.379849846 -0700
@@ -0,0 +1,15 @@
+#
+# Makefile for a ramdisk image - ramdisk.squash image is required.
+#
+SQUASHIMAGE=rootfs.squashfs
+
+obj-y = ramdisk.o
+
+arch/x86/ramdisk/ramdisk.o:
+	$(Q)[ -f arch/x86/ramdisk/$(SQUASHIMAGE) ] || touch arch/x86/ramdisk/$(SQUASHIMAGE)
+	$(Q)$(LD) -T arch/x86/ramdisk/ld.script -b binary --oformat elf64-x86-64 \
+		-o $@ arch/x86/ramdisk/$(SQUASHIMAGE)
+
+clean:
+	rm *.o modules.*
+
diff -uNr linux-4.19.32-origin/init/Kconfig linux-4.19.32/init/Kconfig
--- linux-4.19.32-origin/init/Kconfig	2019-03-26 22:14:43.000000000 -0700
+++ linux-4.19.32/init/Kconfig	2019-08-15 14:34:51.291701412 -0700
@@ -1061,6 +1061,11 @@
 
 	  If unsure say Y.
 
+config EMBEDDED_INITRD
+	bool "Including CRAMFS boot image"
+	help
+	  Speedy compilation & easy maintenance
+
 if BLK_DEV_INITRD
 
 source "usr/Kconfig"
