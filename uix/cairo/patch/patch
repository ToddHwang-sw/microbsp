diff --git a/src/cairo-mutex-impl-private.h b/src/cairo-mutex-impl-private.h
index a8599d47e..dd29caa78 100644
--- a/src/cairo-mutex-impl-private.h
+++ b/src/cairo-mutex-impl-private.h
@@ -50,9 +50,11 @@
 #endif
 
 /* A fully qualified no-operation statement */
-#define CAIRO_MUTEX_IMPL_NOOP	do {/*no-op*/} while (0)
+/* #define CAIRO_MUTEX_IMPL_NOOP	do {} while (0) */
+#define CAIRO_MUTEX_IMPL_NOOP	
 /* And one that evaluates its argument once */
-#define CAIRO_MUTEX_IMPL_NOOP1(expr)        do { (void)(expr); } while (0)
+/* #define CAIRO_MUTEX_IMPL_NOOP1(expr)        {do { (void)(expr); } while (0);} */
+#define CAIRO_MUTEX_IMPL_NOOP1(expr)        CAIRO_MUTEX_IMPL_NOOP
 /* Note: 'if (expr) {}' is an alternative to '(void)(expr);' that will 'use' the
  * result of __attribute__((warn_used_result)) functions. */
 
@@ -166,7 +168,8 @@
 # define CAIRO_MUTEX_IMPL_NO 1
 # define CAIRO_MUTEX_IMPL_INITIALIZE() CAIRO_MUTEX_IMPL_NOOP
 # define CAIRO_MUTEX_IMPL_LOCK(mutex) CAIRO_MUTEX_IMPL_NOOP1(mutex)
-# define CAIRO_MUTEX_IMPL_TRY_LOCK(mutex) (CAIRO_MUTEX_IMPL_NOOP1(mutex), TRUE)
+/* # define CAIRO_MUTEX_IMPL_TRY_LOCK(mutex) (CAIRO_MUTEX_IMPL_NOOP1(mutex), TRUE) */
+# define CAIRO_MUTEX_IMPL_TRY_LOCK(mutex) CAIRO_MUTEX_IMPL_NOOP1(mutex)
 # define CAIRO_MUTEX_IMPL_UNLOCK(mutex) CAIRO_MUTEX_IMPL_NOOP1(mutex)
 # define CAIRO_MUTEX_IMPL_NIL_INITIALIZER 0
 
