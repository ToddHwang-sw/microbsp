diff --git a/meson.build b/meson.build
index c48945b..bf7cf6c 100644
--- a/meson.build
+++ b/meson.build
@@ -158,7 +158,7 @@ with_dri_r200 = dri_drivers.contains('r200')
 with_dri_nouveau = dri_drivers.contains('nouveau')
 with_dri_swrast = dri_drivers.contains('swrast')
 
-with_dri = dri_drivers.length() != 0 and dri_drivers != ['']
+with_dri = get_option('dri') or (dri_drivers.length() != 0 and dri_drivers != [''])
 
 gallium_drivers = get_option('gallium-drivers')
 if gallium_drivers.contains('auto')
@@ -171,8 +171,7 @@ if gallium_drivers.contains('auto')
       ]
     elif ['arm', 'aarch64'].contains(host_machine.cpu_family())
       gallium_drivers = [
-        'kmsro', 'v3d', 'vc4', 'freedreno', 'etnaviv', 'nouveau',
-        'tegra', 'virgl', 'lima', 'panfrost', 'swrast'
+        'kmsro', 'v3d', 'vc4', 'freedreno', 'etnaviv', 'nouveau', 'swrast' 
       ]
     else
       error('Unknown architecture @0@. Please pass -Dgallium-drivers to set driver options. Patches gladly accepted to fix this.'.format(
@@ -1550,22 +1549,22 @@ endif
 # TODO: symbol mangling
 
 if with_platform_wayland
-  dep_wl_scanner = dependency('wayland-scanner', native: true)
-  prog_wl_scanner = find_program(dep_wl_scanner.get_pkgconfig_variable('wayland_scanner'))
+  dep_wl_scanner = dependency('wayland-scanner-host')
+  prog_wl_scanner = find_program('wayland-scanner')
   if dep_wl_scanner.version().version_compare('>= 1.15')
     wl_scanner_arg = 'private-code'
   else
     wl_scanner_arg = 'code'
   endif
-  dep_wl_protocols = dependency('wayland-protocols', version : '>= 1.8')
-  dep_wayland_client = dependency('wayland-client', version : '>=1.11')
-  dep_wayland_server = dependency('wayland-server', version : '>=1.11')
+  dep_wl_protocols = dependency('wayland-protocols')
+  dep_wayland_client = dependency('wayland-client')
+  dep_wayland_server = dependency('wayland-server')
   if with_egl
-    dep_wayland_egl = dependency('wayland-egl-backend', version : '>= 3')
+    dep_wayland_egl = dependency('wayland-egl-backend')
     dep_wayland_egl_headers = declare_dependency(
       compile_args : run_command(prog_pkgconfig, ['wayland-egl-backend', '--cflags']).stdout().split())
   endif
-  wayland_dmabuf_xml = join_paths(
+  wayland_dmabuf_xml = get_option('base-install') + join_paths(
     dep_wl_protocols.get_pkgconfig_variable('pkgdatadir'), 'unstable',
     'linux-dmabuf', 'linux-dmabuf-unstable-v1.xml'
   )
diff --git a/meson_options.txt b/meson_options.txt
index 1a2dd8e..7b6fa9a 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -28,6 +28,12 @@ option(
   ],
   description : 'window systems to support. If this is set to `auto`, all platforms applicable will be enabled.'
 )
+option(
+  'dri',
+  type : 'boolean',
+  value : false,
+  description : 'enable support for dri'
+)
 option(
   'dri3',
   type : 'combo',
@@ -386,3 +392,9 @@ option(
   value : 'auto',
   description : 'Use ZSTD instead of ZLIB in some cases.'
 )
+option(
+  'base-install',
+  type : 'string',
+  value : '',
+  description : 'Location of system installation'
+)
